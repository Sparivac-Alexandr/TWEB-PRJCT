@using System.Web.Optimization
@model taskore.Models.Auth.NewPasswordModel
@{
    ViewBag.Title = "Reset Password";
}
@Styles.Render("~/Content/css")
<body>
    <div class="auth-right">
        <div class="auth-form-container">
            <div class="auth-header">
                <h1>Reset Password</h1>
                <p>Enter the code from your email and create a new password</p>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["ErrorMessage"]
                </div>
            }

            @using (Html.BeginForm("ResetPassword", "Auth", FormMethod.Post, new { id = "reset-password-form" }))
            {
                @Html.AntiForgeryToken()
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Email, new { type = "email", placeholder = "Email address", required = "required" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="input-group">
                    @Html.TextBoxFor(m => m.ResetCode, new { placeholder = "Reset Code", required = "required" })
                    @Html.ValidationMessageFor(m => m.ResetCode, "", new { @class = "text-danger" })
                </div>
                <div class="input-group">
                    @Html.PasswordFor(m => m.NewPassword, new { placeholder = "New Password", required = "required" })
                    @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                </div>
                <div class="input-group">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { placeholder = "Confirm Password", required = "required" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <button type="submit" class="submit-button">Reset Password</button>
                <div class="back-link">
                    <a href="@Url.Action("SignIn", "Auth")">Back to Login</a>
                </div>
            }
        </div>
    </div>

    <style>
        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 4px;
        }
        .alert-success {
            color: #155724;
            background-color: #d4edda;
            border: 1px solid #c3e6cb;
        }
        .alert-danger {
            color: #721c24;
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
        }
        .text-danger {
            color: #dc3545;
            font-size: 0.8rem;
            margin-top: 0.25rem;
            display: block;
        }
    </style>
</body> 