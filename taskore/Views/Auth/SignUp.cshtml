@using System.Web.Optimization
@model taskore.Models.Auth.UserDataRegister
@{
    ViewBag.Title = "Sign Up";
}
@Styles.Render("~/Content/css")

<body>
    <div class="auth-right">
        <div class="auth-form-container">
            <div class="auth-header">
                <h1>Sign Up</h1>
                <p>Please fill in your information</p>
            </div>
            
            
            @using (Html.BeginForm("SignUp", "Auth", FormMethod.Post, new { id = "signup-form" }))
            {
                @Html.AntiForgeryToken()
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Email, new
                    {
                        placeholder = "Email address",
                        @required = "required",
                        type = "email"
                    })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="input-group">
                    @Html.TextBoxFor(m => m.FirstName, new
                    {
                        placeholder = "First Name",
                        @required = "required",
                        type = "text"
                    })
                </div>
                <div class="input-group">
                    @Html.TextBoxFor(m => m.LastName, new
                    {
                        placeholder = "Last Name",
                        @required = "required",
                        type = "text"
                    })
                </div>
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Password, new
                    {
                        placeholder = "Password",
                        @required = "required",
                        type = "password"
                    })
                </div>
                <div class="input-group">
                    @Html.DropDownListFor(m => m.Role, new SelectList(new[]
                    {
                        new { Value = "employer", Text = "Freelancer" },
                        new { Value = "customer", Text = "Client" }
                    }, "Value", "Text"), "Select user type", new { @required = "required" })
                </div>
                <button type="submit" class="submit-button">Create Account</button>
                <div class="back-link">
                    Already have an account? <a href="@Url.Action("SignIn", "Auth")" onclick="showPage('login')">Sign in</a>
                </div>
            }
        </div>
    </div>
</body>

