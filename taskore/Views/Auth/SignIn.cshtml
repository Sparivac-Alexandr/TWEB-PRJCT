@using System.Web.Optimization
@model taskoreDomain.Enteties.User.UserLoginSession
@{
    ViewBag.Title = "Sign In";
}
@Styles.Render("~/Content/css")
 

<body>
    <div class="auth-right">
        <div class="auth-form-container">
            <div class="auth-header">
                <h1>Sign In</h1>
                <p>Please enter your details to login</p>
            </div>
            
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                </div>
            }
            
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["ErrorMessage"]
                </div>
            }
            
            @using (Html.BeginForm("SignIn", "Auth", FormMethod.Post, new { id = "login-form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Email, new { @type = "email", @placeholder = "Email address", @required = "required" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                
                <div class="input-group">
                    @Html.PasswordFor(m => m.Password, new { @id = "Password", @placeholder = "Password", @required = "required" })
                    <button type="button" class="password-toggle" onclick="togglePasswordVisibility('Password')">
                        <i class="fas fa-eye"></i>
                    </button>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
                
                <button type="submit" class="submit-button">Sign in</button>
                
                <div class="back-link">
                    <a href="@Url.Action("ForgotPass", "Auth")">Forgot password?</a>
                    <br><br>
                    Don't have an account? <a href="@Url.Action("SignUp", "Auth")">Sign up</a>
                </div>
            }
        </div>
    </div>

    <style>
        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 4px;
        }
        .alert-success {
            color: #155724;
            background-color: #d4edda;
            border: 1px solid #c3e6cb;
        }
        .alert-danger {
            color: #721c24;
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
        }
        .text-danger {
            color: #dc3545;
            font-size: 0.8rem;
            margin-top: 0.25rem;
            display: block;
        }
        
        /* Password toggle button styles */
        .input-group {
            position: relative;
        }
        .password-toggle {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            color: #64748b;
            padding: 5px;
            z-index: 2;
        }
        .password-toggle:hover {
            color: #3b82f6;
        }
    </style>

    <script>
        function togglePasswordVisibility(fieldId) {
            const passwordField = document.getElementById(fieldId);
            const toggleButton = event.currentTarget;
            const icon = toggleButton.querySelector('i');
            
            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                passwordField.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }
    </script>
</body>