@model taskoreBusinessLogic.DBModel.ProjectDBModel

@{
    ViewBag.Title = "Create Project";
    
    // Get the current user's name from session
    string userFullName = Session["UserFullName"] as string ?? "Guest User";
    int userId = Session["UserId"] != null ? (int)Session["UserId"] : 1;
}

@Html.Partial("_Header")

<div class="container">
    <div class="create-content">
        <h1 class="page-title">Create New Project</h1>
        <p class="page-subtitle">Fill out the details below to start your project and connect with talented freelancers.</p>

        @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
        {
            <div class="alert alert-success d-flex align-items-center" role="alert">
                <i class="fas fa-check-circle me-2"></i>
                <span>@TempData["SuccessMessage"]</span>
            </div>
        }

        <div class="create-grid">
            <section class="info-section">
                <h2 class="section-title">Project Guidelines</h2>
                <p class="section-text">Follow these tips to create an effective project listing:</p>
                <ul class="guidelines-list">
                    <li>
                        <i class="fas fa-check-circle"></i>
                        <div>
                            <strong>Be Specific</strong>
                            <span>Provide clear details about your project requirements and goals</span>
                        </div>
                    </li>
                    <li>
                        <i class="fas fa-check-circle"></i>
                        <div>
                            <strong>Set Realistic Budget</strong>
                            <span>Choose a budget range that reflects the project's scope</span>
                        </div>
                    </li>
                    <li>
                        <i class="fas fa-check-circle"></i>
                        <div>
                            <strong>Define Timeline</strong>
                            <span>Set clear deadlines to help freelancers plan their work</span>
                        </div>
                    </li>
                    <li>
                        <i class="fas fa-check-circle"></i>
                        <div>
                            <strong>List Required Skills</strong>
                            <span>Specify the key skills needed for successful project completion</span>
                        </div>
                    </li>
                </ul>
            </section>

            @using (Html.BeginForm("CreateProjectPage", "Main", FormMethod.Post, new { id = "project-form", @class = "create-form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "validation-summary" })
                @Html.Hidden("UserId", userId)

                <div class="form-card">
                    <div class="card-header">
                        <div class="creator-info">
                            <div class="creator-avatar">
                                <i class="fas fa-user-circle"></i>
                            </div>
                            <div class="creator-details">
                                <span class="creator-label">Project Creator</span>
                                <span class="creator-name">@userFullName</span>
                            </div>
                        </div>
                    </div>

                    <div class="form-sections">
                        <div class="form-section">
                            <h2><i class="fas fa-info-circle"></i> Basic Information</h2>
                            
                            <div class="form-group">
                                <label for="Title">Project Title <span class="required">*</span></label>
                                @Html.TextBoxFor(m => m.Title, new { @class = "form-input", placeholder = "Enter a descriptive title for your project" })
                                @Html.ValidationMessageFor(m => m.Title, "", new { @class = "error-message" })
                            </div>
                            
                            <div class="form-group">
                                <label for="Description">Project Description <span class="required">*</span></label>
                                <div class="input-hint">Share the goals, requirements, and deliverables of your project</div>
                                @Html.TextAreaFor(m => m.Description, new { @class = "form-input", placeholder = "Describe your project in detail...", rows = "6" })
                                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "error-message" })
                            </div>
                        </div>
                        
                        <div class="form-section">
                            <h2><i class="fas fa-cog"></i> Project Details</h2>
                            
                            <div class="form-group">
                                <label for="Category">Category <span class="required">*</span></label>
                                @Html.DropDownListFor(m => m.Category, 
                                    new List<SelectListItem>
                                    {
                                        new SelectListItem { Text = "Select a category", Value = "", Selected = true },
                                        new SelectListItem { Text = "Web Development", Value = "Web Development" },
                                        new SelectListItem { Text = "Graphic Design", Value = "Graphic Design" },
                                        new SelectListItem { Text = "Content Writing", Value = "Content Writing" },
                                        new SelectListItem { Text = "Digital Marketing", Value = "Digital Marketing" },
                                        new SelectListItem { Text = "Mobile Apps", Value = "Mobile Apps" }
                                    }, 
                                    new { @class = "form-input" })
                                @Html.ValidationMessageFor(m => m.Category, "", new { @class = "error-message" })
                            </div>
                            
                            <div class="form-flex">
                                <div class="form-group">
                                    <label for="Budget">Budget <span class="required">*</span></label>
                                    @Html.DropDownListFor(m => m.Budget,
                                        new List<SelectListItem>
                                        {
                                            new SelectListItem { Text = "Select a budget", Value = "", Selected = true },
                                            new SelectListItem { Text = "Under $500", Value = "Under $500" },
                                            new SelectListItem { Text = "$500 - $1,000", Value = "$500 - $1,000" },
                                            new SelectListItem { Text = "$1,000 - $5,000", Value = "$1,000 - $5,000" },
                                            new SelectListItem { Text = "Over $5,000", Value = "Over $5,000" }
                                        },
                                        new { @class = "form-input" })
                                    @Html.ValidationMessageFor(m => m.Budget, "", new { @class = "error-message" })
                                </div>
                                
                                <div class="form-group">
                                    <label for="Deadline">Deadline <span class="required">*</span></label>
                                    @Html.DropDownListFor(m => m.Deadline,
                                        new List<SelectListItem>
                                        {
                                            new SelectListItem { Text = "Select a deadline", Value = "", Selected = true },
                                            new SelectListItem { Text = "Urgent (24h)", Value = "Urgent (24h)" },
                                            new SelectListItem { Text = "Within a week", Value = "Within a week" },
                                            new SelectListItem { Text = "Within a month", Value = "Within a month" },
                                            new SelectListItem { Text = "Long-term", Value = "Long-term" }
                                        },
                                        new { @class = "form-input" })
                                    @Html.ValidationMessageFor(m => m.Deadline, "", new { @class = "error-message" })
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="RequiredSkills">Required Skills <span class="required">*</span></label>
                                <div class="input-hint">List the key skills needed for this project (comma-separated)</div>
                                @Html.TextBoxFor(m => m.RequiredSkills, new { @class = "form-input", placeholder = "e.g. JavaScript, Python, Photoshop" })
                                @Html.ValidationMessageFor(m => m.RequiredSkills, "", new { @class = "error-message" })
                            </div>
                        </div>
                    </div>

                    <div class="form-actions">
                        <a href="@Url.Action("ExplorePage", "Main")" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to Explore
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-rocket"></i> Launch Project
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@Html.Partial("_Footer")

<style>
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    .create-content {
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        padding: 2rem;
        margin-top: 1.5rem;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #333;
        margin-bottom: 0.5rem;
        text-align: center;
        position: relative;
    }

    .page-title:after {
        content: '';
        display: block;
        width: 80px;
        height: 4px;
        background-color: #3b82f6;
        margin: 0.75rem auto 0;
        border-radius: 2px;
    }

    .page-subtitle {
        text-align: center;
        color: #666;
        margin-bottom: 2.5rem;
        font-size: 1.1rem;
    }

    .create-grid {
        display: grid;
        grid-template-columns: 1fr 1.5fr;
        gap: 3rem;
    }

    .section-title {
        font-size: 1.75rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 1.25rem;
    }

    .section-text {
        font-size: 1.05rem;
        line-height: 1.7;
        color: #555;
        margin-bottom: 1.5rem;
    }

    .info-section {
        background-color: #f8fafc;
        border-radius: 8px;
        padding: 2rem;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.04);
    }

    .guidelines-list {
        list-style: none;
        padding: 0;
        margin: 1.5rem 0 0 0;
    }

    .guidelines-list li {
        display: flex;
        align-items: flex-start;
        margin-bottom: 1.5rem;
    }

    .guidelines-list li i {
        font-size: 1.25rem;
        color: #3b82f6;
        margin-right: 1rem;
        margin-top: 0.25rem;
        width: 24px;
        text-align: center;
    }

    .guidelines-list li div {
        flex: 1;
    }

    .guidelines-list li strong {
        display: block;
        font-weight: 600;
        margin-bottom: 0.25rem;
        color: #333;
    }

    .guidelines-list li span {
        color: #555;
    }

    .form-card {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
        overflow: hidden;
    }

    .card-header {
        padding: 1.5rem;
        background-color: #f8fafc;
        border-bottom: 1px solid #e2e8f0;
    }

    .creator-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .creator-avatar {
        width: 48px;
        height: 48px;
        background-color: #3b82f6;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .creator-avatar i {
        font-size: 1.5rem;
        color: white;
    }

    .creator-details {
        display: flex;
        flex-direction: column;
    }

    .creator-label {
        font-size: 0.875rem;
        color: #64748b;
    }

    .creator-name {
        font-weight: 600;
        color: #1e293b;
    }

    .form-sections {
        padding: 2rem;
    }

    .form-section {
        margin-bottom: 2.5rem;
    }

    .form-section:last-child {
        margin-bottom: 0;
    }

    .form-section h2 {
        font-size: 1.5rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 1.5rem;
        padding-bottom: 0.75rem;
        border-bottom: 1px solid #e2e8f0;
        display: flex;
        align-items: center;
    }

    .form-section h2 i {
        margin-right: 0.75rem;
        color: #3b82f6;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-flex {
        display: flex;
        gap: 1.5rem;
    }

    .form-flex .form-group {
        flex: 1;
    }

    .form-group label {
        display: block;
        font-weight: 500;
        color: #333;
        margin-bottom: 0.5rem;
    }

    .required {
        color: #dc3545;
        margin-left: 0.25rem;
    }

    .input-hint {
        font-size: 0.875rem;
        color: #64748b;
        margin-bottom: 0.5rem;
    }

    .form-input {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 1px solid #e2e8f0;
        border-radius: 6px;
        background-color: #f8fafc;
        font-size: 1rem;
        transition: all 0.2s ease;
    }

    .form-input:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        background-color: #fff;
    }

    .form-input::placeholder {
        color: #94a3b8;
    }

    .form-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.5rem 2rem;
        background-color: #f8fafc;
        border-top: 1px solid #e2e8f0;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.2s ease;
        cursor: pointer;
        border: none;
    }

    .btn-primary {
        background-color: #3b82f6;
        color: white;
    }

    .btn-primary:hover {
        background-color: #2563eb;
    }

    .btn-secondary {
        background-color: #f8fafc;
        color: #3b82f6;
        border: 1px solid #e2e8f0;
    }

    .btn-secondary:hover {
        background-color: #f1f5f9;
        color: #2563eb;
    }

    .alert {
        padding: 1rem 1.5rem;
        border-radius: 6px;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
    }

    .alert-success {
        background-color: #ecfdf5;
        color: #059669;
        border: 1px solid #a7f3d0;
    }

    .validation-summary {
        background-color: #fee2e2;
        color: #dc2626;
        padding: 1rem 1.5rem;
        border-radius: 6px;
        margin-bottom: 1.5rem;
        border: 1px solid #fecaca;
    }

    .error-message {
        color: #dc2626;
        font-size: 0.875rem;
        margin-top: 0.5rem;
    }

   
</style>

