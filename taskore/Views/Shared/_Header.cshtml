@using System.Web.Optimization
@{
    ViewBag.Title = "_Header";
}

@Styles.Render("~/Content/css")

<header class="main-header">
    <div class="header-container">
        <div class="logo-search">
            <div class="logo">
                <a href="@Url.Action("News", "Main")">
                    <img src="@Url.Content("~/wwwroot/logo.png")" alt="Logo" class="header-logo-img">
                    <span class="logo-text">taskore</span>
                    <span class="logo-dot">.</span>
                </a>
            </div>
        </div>
        
        <nav class="main-nav">
            <!-- Projects Dropdown -->
            <div class="nav-dropdown">
                <button class="nav-dropdown-btn">
                    <i class="fas fa-briefcase"></i>
                    <span>Projects</span>
                    <i class="fas fa-chevron-down"></i>
                </button>
                <div class="nav-dropdown-menu">
                    <a href="@Url.Action("ExplorePage", "Main")" class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "ExplorePage" ? "active" : "")">
                <i class="fas fa-compass"></i>
                        <span>Explore Projects</span>
            </a>
                    <a href="@Url.Action("MyProjects", "Main")" class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "MyProjects" ? "active" : "")">
                        <i class="fas fa-folder"></i>
                <span>Applied Projects</span>
            </a>
                    <a href="@Url.Action("CompletedProjects", "Main")" class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "CompletedProjects" ? "active" : "")">
                        <i class="fas fa-check-circle"></i>
                        <span>Completed Projects</span>
                    </a>
                    <a href="@Url.Action("CreateProjectPage", "Main")" class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "CreateProjectPage" ? "active" : "")">
                <i class="fas fa-plus-circle"></i>
                <span>New Project</span>
            </a>
                </div>
            </div>

            <!-- Community Dropdown -->
            <div class="nav-dropdown">
                <button class="nav-dropdown-btn">
                <i class="fas fa-users"></i>
                    <span>Community</span>
                    <i class="fas fa-chevron-down"></i>
                </button>
                <div class="nav-dropdown-menu">
                    <a href="@Url.Action("AllFreelancers", "Main")" class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "AllFreelancers" ? "active" : "")">
                        <i class="fas fa-user-friends"></i>
                        <span>Freelancers</span>
                    </a>
                    <a href="@Url.Action("UserReviews", "Main")" class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "UserReviews" ? "active" : "")">
                        <i class="fas fa-star"></i>
                        <span>My Reviews</span>
                    </a>
                </div>
            </div>

            <!-- Information Dropdown -->
            <div class="nav-dropdown">
                <button class="nav-dropdown-btn">
                    <i class="fas fa-info-circle"></i>
                    <span>Information</span>
                    <i class="fas fa-chevron-down"></i>
                </button>
                <div class="nav-dropdown-menu">
                    <a href="@Url.Action("News", "Main")" class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "News" ? "active" : "")">
                        <i class="fas fa-newspaper"></i>
                        <span>News</span>
                    </a>
                    <a href="@Url.Action("UserStats", "Main")" class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "UserStats" ? "active" : "")">
                        <i class="fas fa-chart-bar"></i>
                        <span>Dashboard</span>
                    </a>
                </div>
            </div>

            <!-- Chat Section (separat) -->
            <a href="@Url.Action("Chat", "Main")" class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "Chat" ? "active" : "")">
                <i class="fas fa-comments"></i>
                <span>Chat</span>
            </a>
        </nav>
        
        <div class="header-actions">
                @if (Session["UserFullName"] != null)
                {
                <div class="user-menu">
                    <div class="user-info">
                        <a href="@Url.Action("MyProfile", "Main")" class="user-name-link">
                        <span class="user-name">@Session["UserFullName"]</span>
                        </a>
                    </div>
                    <div class="user-avatar">
                        @{
                            var profileImage = Session["ProfileImageUrl"] != null ? Session["ProfileImageUrl"].ToString() : "";
                            var userFullName = Session["UserFullName"]?.ToString() ?? "";
                            var userInitials = "U";
                            
                            if (!string.IsNullOrEmpty(userFullName))
                            {
                                var nameParts = userFullName.Split(' ');
                                userInitials = "";
                                
                                if (nameParts.Length > 0 && !string.IsNullOrEmpty(nameParts[0]) && nameParts[0].Length > 0)
                                {
                                    userInitials += nameParts[0][0];
                                }
                                
                                if (nameParts.Length > 1 && !string.IsNullOrEmpty(nameParts[1]) && nameParts[1].Length > 0)
                                {
                                    userInitials += nameParts[1][0];
                                }
                                
                                if (string.IsNullOrEmpty(userInitials))
                                {
                                    userInitials = "U";
                                }
                            }
                        }
                        @if (!string.IsNullOrEmpty(profileImage))
                        {
                            <img src="@profileImage" alt="Profile">
                        }
                        else
                        {
                            <div class="avatar-initials">@userInitials</div>
                        }
                    </div>
                    <div class="dropdown-menu">
                        <div class="dropdown-header">
                            <span>@Session["UserFullName"]</span>
                            <span class="user-email">@(Session["UserEmail"] ?? "user@example.com")</span>
                        </div>
                        <div class="dropdown-divider"></div>
                        <a href="@Url.Action("MyProfile", "Main")" class="dropdown-item">
                            <i class="fas fa-user"></i>
                            <span>My Profile</span>
                        </a>
                        <div class="dropdown-divider"></div>
                        <a href="@Url.Action("SignOut", "Auth")" class="dropdown-item">
                            <i class="fas fa-sign-out-alt"></i>
                            <span>Sign Out</span>
                        </a>
                    </div>
                    </div>
                }
                else
                {
                    <div class="auth-buttons">
                        <a href="@Url.Action("SignIn", "Auth")" class="btn-sign-in">Sign In</a>
                        <a href="@Url.Action("SignUp", "Auth")" class="btn-sign-up">Sign Up</a>
                    </div>
                }
        </div>
    </div>
</header>

<style>
    /* Header Styles */
    .main-header {
        background-color: #ffffff;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        position: sticky;
        top: 0;
        z-index: 100;
    }

    .header-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0.75rem 1rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    /* Logo */
    .logo-search {
        display: flex;
        align-items: center;
    }

    .logo a {
        display: flex;
        align-items: center;
        text-decoration: none;
    }
    
    .header-logo-img {
        height: 30px;
        width: auto;
        margin-right: 6px;
    }

    .logo-text {
        font-size: 1.5rem;
        font-weight: 700;
        color: #333;
    }

    .logo-dot {
        font-size: 1.5rem;
        font-weight: 700;
        color: #3b82f6;
    }

    /* Navigation */
    .main-nav {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    /* Dropdown Navigation */
    .nav-dropdown {
        position: relative;
    }

    .nav-dropdown-btn {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 0.75rem;
        color: #64748b;
        background: none;
        border: none;
        font-weight: 500;
        font-size: 0.9rem;
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .nav-dropdown-btn i {
        font-size: 1.1rem;
    }

    .nav-dropdown-btn .fa-chevron-down {
        font-size: 0.8rem;
        margin-left: 0.25rem;
        transition: transform 0.2s ease;
    }

    .nav-dropdown:hover .nav-dropdown-btn,
    .nav-dropdown.active .nav-dropdown-btn {
        color: #3b82f6;
        background-color: #f1f5f9;
    }

    .nav-dropdown:hover .nav-dropdown-btn .fa-chevron-down,
    .nav-dropdown.active .nav-dropdown-btn .fa-chevron-down {
        transform: rotate(180deg);
    }

    .nav-dropdown-menu {
        position: absolute;
        top: calc(100% + 0.5rem);
        left: 0;
        background-color: white;
        border-radius: 8px;
        min-width: 200px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        opacity: 0;
        visibility: hidden;
        transform: translateY(-10px);
        transition: all 0.3s ease;
        z-index: 101;
    }

    .nav-dropdown:hover .nav-dropdown-menu,
    .nav-dropdown.active .nav-dropdown-menu {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
    }

    .nav-dropdown-menu .dropdown-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.75rem 1rem;
        color: #0f172a;
        text-decoration: none;
        transition: background-color 0.2s ease;
    }

    .nav-dropdown-menu .dropdown-item i {
        width: 16px;
        font-size: 0.9rem;
        color: #64748b;
    }

    .nav-dropdown-menu .dropdown-item:hover,
    .nav-dropdown-menu .dropdown-item.active {
        background-color: #f1f5f9;
        color: #3b82f6;
    }

    .nav-dropdown-menu .dropdown-item.active i {
        color: #3b82f6;
    }

    /* Header Actions */
    .header-actions {
        display: flex;
        align-items: center;
    }

    /* User Menu */
    .user-menu {
        position: relative;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        cursor: pointer;
        z-index: 102;
    }

    .user-info {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
    }

    .user-name-link {
        text-decoration: none;
        transition: color 0.2s ease;
    }

    .user-name-link:hover .user-name {
        color: #3b82f6;
    }

    .user-name {
        font-weight: 600;
        font-size: 0.9rem;
        color: #0f172a;
        transition: color 0.2s ease;
    }

    .user-avatar {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        overflow: hidden;
        background-color: #f1f5f9;
        border: 2px solid #e2e8f0;
        transition: border-color 0.2s ease;
    }

    .user-menu:hover .user-avatar {
        border-color: #3b82f6;
    }

    .user-avatar img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .avatar-initials {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 0.9rem;
        color: #3b82f6;
        background-color: #f1f5f9;
    }

    /* User Dropdown Menu */
    .dropdown-menu {
        position: absolute;
        top: calc(100% + 0.75rem);
        right: 0;
        background-color: white;
        border-radius: 8px;
        width: 220px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        opacity: 0;
        visibility: hidden;
        transform: translateY(-10px);
        transition: all 0.2s ease;
        z-index: 102;
        pointer-events: none;
    }
    
    .user-menu.show-dropdown .dropdown-menu {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
        pointer-events: auto;
    }

    .dropdown-header {
        padding: 1rem;
        display: flex;
        flex-direction: column;
        border-bottom: 1px solid #e2e8f0;
    }

    .dropdown-header span:first-child {
        font-weight: 600;
        color: #0f172a;
    }

    .user-email {
        margin-top: 0.25rem;
        font-size: 0.75rem;
        color: #64748b;
    }

    .dropdown-divider {
        height: 1px;
        background-color: #e2e8f0;
        margin: 0.25rem 0;
    }

    .dropdown-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.75rem 1rem;
        color: #0f172a;
        text-decoration: none;
        transition: all 0.2s ease;
    }

    .dropdown-item i {
        width: 16px;
        font-size: 0.9rem;
        color: #64748b;
        transition: color 0.2s ease;
    }

    .dropdown-item:hover {
        background-color: #f1f5f9;
        color: #3b82f6;
    }

    .dropdown-item:hover i {
        color: #3b82f6;
    }

    /* Auth Buttons */
    .auth-buttons {
        display: flex;
        gap: 0.5rem;
    }

    .btn-sign-in, .btn-sign-up {
        padding: 0.5rem 1rem;
        border-radius: 4px;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.2s ease;
    }

    .btn-sign-in {
        color: #3b82f6;
        background-color: transparent;
        border: 1px solid #3b82f6;
    }

    .btn-sign-up {
        color: white;
        background-color: #3b82f6;
        border: 1px solid #3b82f6;
    }

    .btn-sign-in:hover {
        background-color: #f1f5f9;
    }

    .btn-sign-up:hover {
        background-color: #2563eb;
    }

    /* Stil pentru noua secțiune Chat */
    .nav-link {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 0.75rem;
        color: #64748b;
        background: none;
        border: none;
        font-weight: 500;
        font-size: 0.9rem;
        border-radius: 4px;
        cursor: pointer;
        text-decoration: none;
        transition: all 0.2s ease;
    }
    .nav-link i {
        font-size: 1.1rem;
    }
    .nav-link.active, .nav-link:hover {
        color: #3b82f6;
        background-color: #f1f5f9;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Handle navigation dropdowns
        const dropdowns = document.querySelectorAll('.nav-dropdown');
        const userMenu = document.querySelector('.user-menu');
        
        // Close all dropdowns when clicking outside
        document.addEventListener('click', function(e) {
            // Close navigation dropdowns
            dropdowns.forEach(dropdown => {
                dropdown.classList.remove('active');
            });

            // Close user menu if clicking outside
            if (userMenu && !userMenu.contains(e.target) && !e.target.closest('.user-name-link')) {
                userMenu.classList.remove('show-dropdown');
            }
        });

        // Handle navigation dropdowns
        dropdowns.forEach(dropdown => {
            const btn = dropdown.querySelector('.nav-dropdown-btn');
            
            btn.addEventListener('click', function(e) {
                e.stopPropagation();
                dropdowns.forEach(d => {
                    if (d !== dropdown) {
                        d.classList.remove('active');
                    }
                });
                dropdown.classList.toggle('active');
            });
        });

        // Handle user menu dropdown (only for avatar click)
        if (userMenu) {
            const avatar = userMenu.querySelector('.user-avatar');
            if (avatar) {
                avatar.addEventListener('click', function(e) {
                    e.stopPropagation();
                    userMenu.classList.toggle('show-dropdown');
                });
            }

            // Prevent dropdown from closing when clicking inside
            const dropdownMenu = userMenu.querySelector('.dropdown-menu');
            if (dropdownMenu) {
                dropdownMenu.addEventListener('click', function(e) {
                    e.stopPropagation();
                });
            }

            // Handle dropdown items
            const dropdownItems = userMenu.querySelectorAll('.dropdown-item');
            dropdownItems.forEach(item => {
                item.addEventListener('click', function() {
                    userMenu.classList.remove('show-dropdown');
                });
            });
        }
    });
</script>
